{"version":3,"sources":["components/AddCategorias.js","helpers/getGif.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","components/GifApp.js","index.js"],"names":["AddCategorias","setCategorias","categorias","useState","text","setText","onSubmit","e","preventDefault","compara","find","cat","alert","type","placeholder","onChange","target","value","className","onClick","filtrados","filter","c","getGif","a","categoria","limit","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","src","alt","GiftGrid","loading","state","setState","useEffect","then","useFetchGifs","GifApp","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAgB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAC7C,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAqCA,OACE,qCACE,sBAAMC,SAjCW,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAUP,EAAWQ,MAAK,SAACC,GAAD,OAASA,IAAQP,KACpC,KAATA,EACFQ,MAAM,yBACGH,IAAYL,EACrBQ,MAAM,4BAENX,EAAc,CAACG,GAAF,mBAAWF,KACxBG,EAAQ,MAwBR,SACE,uBACEQ,KAAK,OACLC,YAAY,oBACZC,SAzCa,SAACR,GACpBF,EAAQE,EAAES,OAAOC,QAyCXA,MAAOb,MAGX,wBAAQc,UAAU,eAAeC,QAzBhB,WACnB,IAAMV,EAAUP,EAAWQ,MAAK,SAACC,GAAD,OAASA,IAAQP,KACjD,GAAa,KAATA,EACFQ,MAAM,6CACD,GAAIH,IAAYL,EAAM,CAC3B,IAAIgB,EAAYlB,EAAWmB,QAAO,SAACC,GAAD,OAAOA,IAAMlB,KAC/CH,EAAcmB,GACdf,EAAQ,SAERO,MAAM,4BAgBN,kC,uBCnDOW,EAAM,uCAAG,2CAAAC,EAAA,6DAASC,EAAT,EAASA,UAAT,IAAoBC,aAApB,MAA4B,GAA5B,EACJ,mCACC,gCACXC,EAHc,UAEH,gCAFG,2BACJ,mCADI,cAGmCF,EAHnC,kBAGsDC,GAHtD,SAKDE,MAAMD,GALL,cAKdE,EALc,gBAMGA,EAAKC,OANR,uBAMZC,EANY,EAMZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAZlB,kBAebK,GAfa,4CAAH,sDCENO,EAAe,SAAC,GAAa,IAAXL,EAAU,EAAVA,IAC7B,OACE,sBAAKhB,UAAU,+DAAf,UACE,qBAAKA,UAAU,MAAMsB,IAAKN,EAAIP,IAAKc,IAAKP,EAAIE,QAC5C,qBAAIlB,UAAU,KAAd,cAAqBgB,EAAIE,MAAzB,WCHOM,EAAW,SAAC,GAAmB,IAAjBjB,EAAgB,EAAhBA,UACzB,ECD0B,SAACA,GAC3B,MAA0BtB,mBAAS,CACjC4B,KAAM,GACNY,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRvB,EAAO,CAAEE,cAAasB,MAAK,SAACb,GAAD,OACzBW,EAAS,CACPd,KAAMG,EACNS,SAAS,SAGZ,CAAClB,IAEGmB,EDdmBI,CAAavB,GAA/BM,EAAR,EAAQA,KAAMY,EAAd,EAAcA,QAEd,OACE,gCACE,+BACGlB,EADH,IACc,wBAAQP,UAAU,eAAlB,kBAGbyB,GAAW,0CACZ,oBAAIzB,UAAU,gBAAd,SACGa,EAAKE,KAAI,SAACC,GACT,OAAO,cAAC,EAAD,CAA2BA,IAAKA,GAAbA,EAAIC,SAGlC,2BEdOc,EAAS,WACpB,MAAoC9C,mBAAS,IAA7C,mBAAOD,EAAP,KAAmBD,EAAnB,KACA,OACE,qCACE,sFADF,IAEE,cAAC,EAAD,CAAeA,cAAeA,EAAeC,WAAYA,IACzD,6DACA,uBACA,6BACGA,EAAW+B,KAAI,SAACR,GACf,OAAO,cAAC,EAAD,CAA0BA,UAAWA,GAAtBA,YCThCyB,IAASC,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,W","file":"static/js/main.983cfa75.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategorias = ({ setCategorias, categorias }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleSumbit = (e) => {\r\n    e.preventDefault();\r\n    const compara = categorias.find((cat) => cat === text);\r\n    if (text === \"\") {\r\n      alert(\"ESCRIBA UNA CATEGORIA\");\r\n    } else if (compara === text) {\r\n      alert(\"ESA CATEGORIA YA EXISTE\");\r\n    } else {\r\n      setCategorias([text, ...categorias]);\r\n      setText(\"\");\r\n\r\n      // setCategorias((cat =>[...cat, text]));\r\n      // setText(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    const compara = categorias.find((cat) => cat === text);\r\n    if (text === \"\") {\r\n      alert(\"No hay categoria escrita para borrar\");\r\n    } else if (compara === text) {\r\n      var filtrados = categorias.filter((c) => c !== text);\r\n      setCategorias(filtrados);\r\n      setText(\"\");\r\n    } else {\r\n      alert(\"Esa categoria no existe\");\r\n      // setCategorias((cat =>[...cat, text]));\r\n      // setText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSumbit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ingrese Categoria\"\r\n          onChange={handleChange}\r\n          value={text}\r\n        />\r\n      </form>\r\n      <button className=\"buttonDelete\" onClick={handleDelete}>\r\n        Borrar categoria\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nAddCategorias.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n","export const getGif = async ({ categoria, limit = 10 }) => {\r\n  const API_KEY = \"CR4iNqN6oGWyv4qOsfUGbqfr3qRWQKM6\";\r\n  const BASE_API = \"https://api.giphy.com/v1/gifs\";\r\n  const url = `${BASE_API}/search?api_key=${API_KEY}&q=${categoria}&limit=${limit}`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GiftGridItem = ({ img }) => {\r\n  return (\r\n    <div className=\"gif-item animate__animated animate__bounce animate__delay-1s\">\r\n      <img className=\"img\" src={img.url} alt={img.title} />\r\n      <li className=\"li\"> {img.title} </li>\r\n    </div>\r\n  );\r\n};\r\n","import { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GiftGridItem } from \"./GiftGridItem\";\r\n\r\nexport const GiftGrid = ({ categoria }) => {\r\n  const { data, loading } = useFetchGifs(categoria);\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        {categoria} <button className=\"buttonDelete\">X</button>\r\n      </h3>\r\n\r\n      {loading && <h4>Cargando</h4>}\r\n      <ol className=\"gif-container\">\r\n        {data.map((img) => {\r\n          return <GiftGridItem key={img.id} img={img} />;\r\n        })}\r\n      </ol>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGif } from \"../helpers/getGif\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGif({ categoria }).then((img) =>\r\n      setState({\r\n        data: img,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [categoria]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategorias } from \"./AddCategorias\";\r\nimport { GiftGrid } from \"./GiftGrid\";\r\n\r\nexport const GifApp = () => {\r\n  const [categorias, setCategorias] = useState([]);\r\n  return (\r\n    <>\r\n      <h1>Este es el mejor buscador de Gif que podes encontrar</h1>;\r\n      <AddCategorias setCategorias={setCategorias} categorias={categorias} />\r\n      <h2>\"Mejores Gif por categoria\"</h2>\r\n      <hr />\r\n      <ol>\r\n        {categorias.map((categoria) => {\r\n          return <GiftGrid key={categoria} categoria={categoria} />;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { GifApp } from \"./components/GifApp\";\n\nReactDOM.render(<GifApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}